// Generated from SHRMapLexer.g4 by ANTLR 4.5
// jshint ignore: start
var antlr4 = require('antlr4/index');


var serializedATN = ["\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd",
    "\2\60\u01c4\b\1\b\1\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7",
    "\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17",
    "\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4",
    "\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34",
    "\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t",
    "%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\3\2",
    "\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4",
    "\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6",
    "\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b",
    "\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3",
    "\r\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20",
    "\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3",
    "\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24",
    "\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3",
    "\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\30",
    "\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3",
    "\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35",
    "\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3",
    "\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37",
    "\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3!\6!\u012b\n!\r!\16!\u012c\3",
    "\"\3\"\7\"\u0131\n\"\f\"\16\"\u0134\13\"\3#\3#\7#\u0138\n#\f#\16#\u013b",
    "\13#\3$\3$\7$\u013f\n$\f$\16$\u0142\13$\3%\3%\7%\u0146\n%\f%\16%\u0149",
    "\13%\3%\3%\3%\7%\u014e\n%\f%\16%\u0151\13%\6%\u0153\n%\r%\16%\u0154",
    "\3&\3&\7&\u0159\n&\f&\16&\u015c\13&\3&\3&\3&\7&\u0161\n&\f&\16&\u0164",
    "\13&\7&\u0166\n&\f&\16&\u0169\13&\3&\3&\3&\7&\u016e\n&\f&\16&\u0171",
    "\13&\3\'\3\'\7\'\u0175\n\'\f\'\16\'\u0178\13\'\3\'\3\'\3(\3(\3(\3(\3",
    ")\3)\3)\3)\3*\3*\3*\3*\7*\u0188\n*\f*\16*\u018b\13*\3*\3*\3*\3*\3*\3",
    "+\3+\3+\3+\7+\u0196\n+\f+\16+\u0199\13+\3+\3+\3,\7,\u019e\n,\f,\16,",
    "\u01a1\13,\3,\3,\7,\u01a5\n,\f,\16,\u01a8\13,\6,\u01aa\n,\r,\16,\u01ab",
    "\3,\3,\3-\6-\u01b1\n-\r-\16-\u01b2\3-\3-\3.\6.\u01b8\n.\r.\16.\u01b9",
    "\3.\3.\3/\6/\u01bf\n/\r/\16/\u01c0\3/\3/\3\u0189\2\60\5\3\7\4\t\5\13",
    "\6\r\7\17\b\21\t\23\n\25\13\27\f\31\r\33\16\35\17\37\20!\21#\22%\23",
    "\'\24)\25+\26-\27/\30\61\31\63\32\65\33\67\349\35;\36=\37? A!C\"E#G",
    "$I%K&M\'O(Q)S*U+W,Y-[.]/_\60\5\2\3\4\16\3\2\62;\3\2C\\\5\2\62;C\\aa",
    "\7\2//\62;C\\aac|\3\2c|\6\2//\62;C\\c|\5\2//\62;C|\4\2$$^^\5\2\13\13",
    "\17\17\"\"\4\2\f\f\17\17\5\2\13\f\17\17\"\"\6\2\13\f\17\17\"\"<<\u01d5",
    "\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3",
    "\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2",
    "\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2",
    "%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2",
    "\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2",
    "\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2",
    "\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2",
    "\2U\3\2\2\2\2W\3\2\2\2\3Y\3\2\2\2\3[\3\2\2\2\4]\3\2\2\2\4_\3\2\2\2\5",
    "a\3\2\2\2\7j\3\2\2\2\tn\3\2\2\2\13y\3\2\2\2\r}\3\2\2\2\17\u0085\3\2",
    "\2\2\21\u008f\3\2\2\2\23\u009b\3\2\2\2\25\u009e\3\2\2\2\27\u00a0\3\2",
    "\2\2\31\u00a2\3\2\2\2\33\u00a4\3\2\2\2\35\u00a6\3\2\2\2\37\u00a8\3\2",
    "\2\2!\u00ab\3\2\2\2#\u00b3\3\2\2\2%\u00bb\3\2\2\2\'\u00c2\3\2\2\2)\u00ca",
    "\3\2\2\2+\u00ce\3\2\2\2-\u00db\3\2\2\2/\u00e3\3\2\2\2\61\u00e8\3\2\2",
    "\2\63\u00f1\3\2\2\2\65\u00f6\3\2\2\2\67\u00fb\3\2\2\29\u00ff\3\2\2\2",
    ";\u0102\3\2\2\2=\u010b\3\2\2\2?\u0117\3\2\2\2A\u0123\3\2\2\2C\u012a",
    "\3\2\2\2E\u012e\3\2\2\2G\u0135\3\2\2\2I\u013c\3\2\2\2K\u0143\3\2\2\2",
    "M\u0156\3\2\2\2O\u0172\3\2\2\2Q\u017b\3\2\2\2S\u017f\3\2\2\2U\u0183",
    "\3\2\2\2W\u0191\3\2\2\2Y\u01a9\3\2\2\2[\u01b0\3\2\2\2]\u01b7\3\2\2\2",
    "_\u01be\3\2\2\2ab\7I\2\2bc\7t\2\2cd\7c\2\2de\7o\2\2ef\7o\2\2fg\7c\2",
    "\2gh\7t\2\2hi\7<\2\2i\6\3\2\2\2jk\7O\2\2kl\7c\2\2lm\7r\2\2m\b\3\2\2",
    "\2no\7P\2\2op\7c\2\2pq\7o\2\2qr\7g\2\2rs\7u\2\2st\7r\2\2tu\7c\2\2uv",
    "\7e\2\2vw\7g\2\2wx\7<\2\2x\n\3\2\2\2yz\7V\2\2z{\7D\2\2{|\7F\2\2|\f\3",
    "\2\2\2}~\7V\2\2~\177\7c\2\2\177\u0080\7t\2\2\u0080\u0081\7i\2\2\u0081",
    "\u0082\7g\2\2\u0082\u0083\7v\2\2\u0083\u0084\7<\2\2\u0084\16\3\2\2\2",
    "\u0085\u0086\7o\2\2\u0086\u0087\7c\2\2\u0087\u0088\7r\2\2\u0088\u0089",
    "\7u\2\2\u0089\u008a\7\"\2\2\u008a\u008b\7v\2\2\u008b\u008c\7q\2\2\u008c",
    "\u008d\3\2\2\2\u008d\u008e\b\7\2\2\u008e\20\3\2\2\2\u008f\u0090\7e\2",
    "\2\u0090\u0091\7q\2\2\u0091\u0092\7p\2\2\u0092\u0093\7u\2\2\u0093\u0094",
    "\7v\2\2\u0094\u0095\7t\2\2\u0095\u0096\7c\2\2\u0096\u0097\7k\2\2\u0097",
    "\u0098\7p\2\2\u0098\u0099\3\2\2\2\u0099\u009a\b\b\3\2\u009a\22\3\2\2",
    "\2\u009b\u009c\7v\2\2\u009c\u009d\7q\2\2\u009d\24\3\2\2\2\u009e\u009f",
    "\7\60\2\2\u009f\26\3\2\2\2\u00a0\u00a1\7,\2\2\u00a1\30\3\2\2\2\u00a2",
    "\u00a3\7]\2\2\u00a3\32\3\2\2\2\u00a4\u00a5\7_\2\2\u00a5\34\3\2\2\2\u00a6",
    "\u00a7\7<\2\2\u00a7\36\3\2\2\2\u00a8\u00a9\7\60\2\2\u00a9\u00aa\7\60",
    "\2\2\u00aa \3\2\2\2\u00ab\u00ac\7d\2\2\u00ac\u00ad\7q\2\2\u00ad\u00ae",
    "\7q\2\2\u00ae\u00af\7n\2\2\u00af\u00b0\7g\2\2\u00b0\u00b1\7c\2\2\u00b1",
    "\u00b2\7p\2\2\u00b2\"\3\2\2\2\u00b3\u00b4\7k\2\2\u00b4\u00b5\7p\2\2",
    "\u00b5\u00b6\7v\2\2\u00b6\u00b7\7g\2\2\u00b7\u00b8\7i\2\2\u00b8\u00b9",
    "\7g\2\2\u00b9\u00ba\7t\2\2\u00ba$\3\2\2\2\u00bb\u00bc\7u\2\2\u00bc\u00bd",
    "\7v\2\2\u00bd\u00be\7t\2\2\u00be\u00bf\7k\2\2\u00bf\u00c0\7p\2\2\u00c0",
    "\u00c1\7i\2\2\u00c1&\3\2\2\2\u00c2\u00c3\7f\2\2\u00c3\u00c4\7g\2\2\u00c4",
    "\u00c5\7e\2\2\u00c5\u00c6\7k\2\2\u00c6\u00c7\7o\2\2\u00c7\u00c8\7c\2",
    "\2\u00c8\u00c9\7n\2\2\u00c9(\3\2\2\2\u00ca\u00cb\7w\2\2\u00cb\u00cc",
    "\7t\2\2\u00cc\u00cd\7k\2\2\u00cd*\3\2\2\2\u00ce\u00cf\7d\2\2\u00cf\u00d0",
    "\7c\2\2\u00d0\u00d1\7u\2\2\u00d1\u00d2\7g\2\2\u00d2\u00d3\78\2\2\u00d3",
    "\u00d4\7\66\2\2\u00d4\u00d5\7D\2\2\u00d5\u00d6\7k\2\2\u00d6\u00d7\7",
    "p\2\2\u00d7\u00d8\7c\2\2\u00d8\u00d9\7t\2\2\u00d9\u00da\7{\2\2\u00da",
    ",\3\2\2\2\u00db\u00dc\7k\2\2\u00dc\u00dd\7p\2\2\u00dd\u00de\7u\2\2\u00de",
    "\u00df\7v\2\2\u00df\u00e0\7c\2\2\u00e0\u00e1\7p\2\2\u00e1\u00e2\7v\2",
    "\2\u00e2.\3\2\2\2\u00e3\u00e4\7f\2\2\u00e4\u00e5\7c\2\2\u00e5\u00e6",
    "\7v\2\2\u00e6\u00e7\7g\2\2\u00e7\60\3\2\2\2\u00e8\u00e9\7f\2\2\u00e9",
    "\u00ea\7c\2\2\u00ea\u00eb\7v\2\2\u00eb\u00ec\7g\2\2\u00ec\u00ed\7V\2",
    "\2\u00ed\u00ee\7k\2\2\u00ee\u00ef\7o\2\2\u00ef\u00f0\7g\2\2\u00f0\62",
    "\3\2\2\2\u00f1\u00f2\7v\2\2\u00f2\u00f3\7k\2\2\u00f3\u00f4\7o\2\2\u00f4",
    "\u00f5\7g\2\2\u00f5\64\3\2\2\2\u00f6\u00f7\7e\2\2\u00f7\u00f8\7q\2\2",
    "\u00f8\u00f9\7f\2\2\u00f9\u00fa\7g\2\2\u00fa\66\3\2\2\2\u00fb\u00fc",
    "\7q\2\2\u00fc\u00fd\7k\2\2\u00fd\u00fe\7f\2\2\u00fe8\3\2\2\2\u00ff\u0100",
    "\7k\2\2\u0100\u0101\7f\2\2\u0101:\3\2\2\2\u0102\u0103\7o\2\2\u0103\u0104",
    "\7c\2\2\u0104\u0105\7t\2\2\u0105\u0106\7m\2\2\u0106\u0107\7f\2\2\u0107",
    "\u0108\7q\2\2\u0108\u0109\7y\2\2\u0109\u010a\7p\2\2\u010a<\3\2\2\2\u010b",
    "\u010c\7w\2\2\u010c\u010d\7p\2\2\u010d\u010e\7u\2\2\u010e\u010f\7k\2",
    "\2\u010f\u0110\7i\2\2\u0110\u0111\7p\2\2\u0111\u0112\7g\2\2\u0112\u0113",
    "\7f\2\2\u0113\u0114\7K\2\2\u0114\u0115\7p\2\2\u0115\u0116\7v\2\2\u0116",
    ">\3\2\2\2\u0117\u0118\7r\2\2\u0118\u0119\7q\2\2\u0119\u011a\7u\2\2\u011a",
    "\u011b\7k\2\2\u011b\u011c\7v\2\2\u011c\u011d\7k\2\2\u011d\u011e\7x\2",
    "\2\u011e\u011f\7g\2\2\u011f\u0120\7K\2\2\u0120\u0121\7p\2\2\u0121\u0122",
    "\7v\2\2\u0122@\3\2\2\2\u0123\u0124\7z\2\2\u0124\u0125\7j\2\2\u0125\u0126",
    "\7v\2\2\u0126\u0127\7o\2\2\u0127\u0128\7n\2\2\u0128B\3\2\2\2\u0129\u012b",
    "\t\2\2\2\u012a\u0129\3\2\2\2\u012b\u012c\3\2\2\2\u012c\u012a\3\2\2\2",
    "\u012c\u012d\3\2\2\2\u012dD\3\2\2\2\u012e\u0132\t\3\2\2\u012f\u0131",
    "\t\4\2\2\u0130\u012f\3\2\2\2\u0131\u0134\3\2\2\2\u0132\u0130\3\2\2\2",
    "\u0132\u0133\3\2\2\2\u0133F\3\2\2\2\u0134\u0132\3\2\2\2\u0135\u0139",
    "\t\3\2\2\u0136\u0138\t\5\2\2\u0137\u0136\3\2\2\2\u0138\u013b\3\2\2\2",
    "\u0139\u0137\3\2\2\2\u0139\u013a\3\2\2\2\u013aH\3\2\2\2\u013b\u0139",
    "\3\2\2\2\u013c\u0140\t\6\2\2\u013d\u013f\t\7\2\2\u013e\u013d\3\2\2\2",
    "\u013f\u0142\3\2\2\2\u0140\u013e\3\2\2\2\u0140\u0141\3\2\2\2\u0141J",
    "\3\2\2\2\u0142\u0140\3\2\2\2\u0143\u0147\t\6\2\2\u0144\u0146\t\7\2\2",
    "\u0145\u0144\3\2\2\2\u0146\u0149\3\2\2\2\u0147\u0145\3\2\2\2\u0147\u0148",
    "\3\2\2\2\u0148\u0152\3\2\2\2\u0149\u0147\3\2\2\2\u014a\u014b\7\60\2",
    "\2\u014b\u014f\t\6\2\2\u014c\u014e\t\b\2\2\u014d\u014c\3\2\2\2\u014e",
    "\u0151\3\2\2\2\u014f\u014d\3\2\2\2\u014f\u0150\3\2\2\2\u0150\u0153\3",
    "\2\2\2\u0151\u014f\3\2\2\2\u0152\u014a\3\2\2\2\u0153\u0154\3\2\2\2\u0154",
    "\u0152\3\2\2\2\u0154\u0155\3\2\2\2\u0155L\3\2\2\2\u0156\u015a\t\6\2",
    "\2\u0157\u0159\t\7\2\2\u0158\u0157\3\2\2\2\u0159\u015c\3\2\2\2\u015a",
    "\u0158\3\2\2\2\u015a\u015b\3\2\2\2\u015b\u0167\3\2\2\2\u015c\u015a\3",
    "\2\2\2\u015d\u015e\7\60\2\2\u015e\u0162\t\6\2\2\u015f\u0161\t\b\2\2",
    "\u0160\u015f\3\2\2\2\u0161\u0164\3\2\2\2\u0162\u0160\3\2\2\2\u0162\u0163",
    "\3\2\2\2\u0163\u0166\3\2\2\2\u0164\u0162\3\2\2\2\u0165\u015d\3\2\2\2",
    "\u0166\u0169\3\2\2\2\u0167\u0165\3\2\2\2\u0167\u0168\3\2\2\2\u0168\u016a",
    "\3\2\2\2\u0169\u0167\3\2\2\2\u016a\u016b\7\60\2\2\u016b\u016f\t\3\2",
    "\2\u016c\u016e\t\b\2\2\u016d\u016c\3\2\2\2\u016e\u0171\3\2\2\2\u016f",
    "\u016d\3\2\2\2\u016f\u0170\3\2\2\2\u0170N\3\2\2\2\u0171\u016f\3\2\2",
    "\2\u0172\u0176\7$\2\2\u0173\u0175\n\t\2\2\u0174\u0173\3\2\2\2\u0175",
    "\u0178\3\2\2\2\u0176\u0174\3\2\2\2\u0176\u0177\3\2\2\2\u0177\u0179\3",
    "\2\2\2\u0178\u0176\3\2\2\2\u0179\u017a\7$\2\2\u017aP\3\2\2\2\u017b\u017c",
    "\t\n\2\2\u017c\u017d\3\2\2\2\u017d\u017e\b(\4\2\u017eR\3\2\2\2\u017f",
    "\u0180\7\f\2\2\u0180\u0181\3\2\2\2\u0181\u0182\b)\4\2\u0182T\3\2\2\2",
    "\u0183\u0184\7\61\2\2\u0184\u0185\7,\2\2\u0185\u0189\3\2\2\2\u0186\u0188",
    "\13\2\2\2\u0187\u0186\3\2\2\2\u0188\u018b\3\2\2\2\u0189\u018a\3\2\2",
    "\2\u0189\u0187\3\2\2\2\u018a\u018c\3\2\2\2\u018b\u0189\3\2\2\2\u018c",
    "\u018d\7,\2\2\u018d\u018e\7\61\2\2\u018e\u018f\3\2\2\2\u018f\u0190\b",
    "*\5\2\u0190V\3\2\2\2\u0191\u0192\7\61\2\2\u0192\u0193\7\61\2\2\u0193",
    "\u0197\3\2\2\2\u0194\u0196\n\13\2\2\u0195\u0194\3\2\2\2\u0196\u0199",
    "\3\2\2\2\u0197\u0195\3\2\2\2\u0197\u0198\3\2\2\2\u0198\u019a\3\2\2\2",
    "\u0199\u0197\3\2\2\2\u019a\u019b\b+\5\2\u019bX\3\2\2\2\u019c\u019e\n",
    "\f\2\2\u019d\u019c\3\2\2\2\u019e\u01a1\3\2\2\2\u019f\u019d\3\2\2\2\u019f",
    "\u01a0\3\2\2\2\u01a0\u01a2\3\2\2\2\u01a1\u019f\3\2\2\2\u01a2\u01a6\n",
    "\r\2\2\u01a3\u01a5\t\n\2\2\u01a4\u01a3\3\2\2\2\u01a5\u01a8\3\2\2\2\u01a6",
    "\u01a4\3\2\2\2\u01a6\u01a7\3\2\2\2\u01a7\u01aa\3\2\2\2\u01a8\u01a6\3",
    "\2\2\2\u01a9\u019f\3\2\2\2\u01aa\u01ab\3\2\2\2\u01ab\u01a9\3\2\2\2\u01ab",
    "\u01ac\3\2\2\2\u01ac\u01ad\3\2\2\2\u01ad\u01ae\b,\6\2\u01aeZ\3\2\2\2",
    "\u01af\u01b1\t\f\2\2\u01b0\u01af\3\2\2\2\u01b1\u01b2\3\2\2\2\u01b2\u01b0",
    "\3\2\2\2\u01b2\u01b3\3\2\2\2\u01b3\u01b4\3\2\2\2\u01b4\u01b5\b-\4\2",
    "\u01b5\\\3\2\2\2\u01b6\u01b8\n\f\2\2\u01b7\u01b6\3\2\2\2\u01b8\u01b9",
    "\3\2\2\2\u01b9\u01b7\3\2\2\2\u01b9\u01ba\3\2\2\2\u01ba\u01bb\3\2\2\2",
    "\u01bb\u01bc\b.\6\2\u01bc^\3\2\2\2\u01bd\u01bf\t\f\2\2\u01be\u01bd\3",
    "\2\2\2\u01bf\u01c0\3\2\2\2\u01c0\u01be\3\2\2\2\u01c0\u01c1\3\2\2\2\u01c1",
    "\u01c2\3\2\2\2\u01c2\u01c3\b/\4\2\u01c3`\3\2\2\2\31\2\3\4\u012c\u0132",
    "\u0139\u0140\u0147\u014f\u0154\u015a\u0162\u0167\u016f\u0176\u0189\u0197",
    "\u019f\u01a6\u01ab\u01b2\u01b9\u01c0\7\7\3\2\7\4\2\2\3\2\b\2\2\6\2\2"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function SHRMapLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

SHRMapLexer.prototype = Object.create(antlr4.Lexer.prototype);
SHRMapLexer.prototype.constructor = SHRMapLexer;

SHRMapLexer.EOF = antlr4.Token.EOF;
SHRMapLexer.KW_GRAMMAR = 1;
SHRMapLexer.KW_G_MAP = 2;
SHRMapLexer.KW_NAMESPACE = 3;
SHRMapLexer.KW_TBD = 4;
SHRMapLexer.KW_TARGET = 5;
SHRMapLexer.KW_MAPS_TO = 6;
SHRMapLexer.KW_CONSTRAIN = 7;
SHRMapLexer.KW_TO = 8;
SHRMapLexer.DOT = 9;
SHRMapLexer.STAR = 10;
SHRMapLexer.OPEN_BRACKET = 11;
SHRMapLexer.CLOSE_BRACKET = 12;
SHRMapLexer.COLON = 13;
SHRMapLexer.RANGE = 14;
SHRMapLexer.KW_BOOLEAN = 15;
SHRMapLexer.KW_INTEGER = 16;
SHRMapLexer.KW_STRING = 17;
SHRMapLexer.KW_DECIMAL = 18;
SHRMapLexer.KW_URI = 19;
SHRMapLexer.KW_BASE64_BINARY = 20;
SHRMapLexer.KW_INSTANT = 21;
SHRMapLexer.KW_DATE = 22;
SHRMapLexer.KW_DATE_TIME = 23;
SHRMapLexer.KW_TIME = 24;
SHRMapLexer.KW_CODE = 25;
SHRMapLexer.KW_OID = 26;
SHRMapLexer.KW_ID = 27;
SHRMapLexer.KW_MARKDOWN = 28;
SHRMapLexer.KW_UNSIGNED_INT = 29;
SHRMapLexer.KW_POSITIVE_INT = 30;
SHRMapLexer.KW_XHTML = 31;
SHRMapLexer.WHOLE_NUMBER = 32;
SHRMapLexer.ALL_CAPS = 33;
SHRMapLexer.UPPER_WORD = 34;
SHRMapLexer.LOWER_WORD = 35;
SHRMapLexer.DOT_SEPARATED_LW = 36;
SHRMapLexer.DOT_SEPARATED_UW = 37;
SHRMapLexer.STRING = 38;
SHRMapLexer.WS = 39;
SHRMapLexer.NEWLINE = 40;
SHRMapLexer.COMMENT = 41;
SHRMapLexer.LINE_COMMENT = 42;
SHRMapLexer.TARGET_PHRASE = 43;
SHRMapLexer.WS2 = 44;
SHRMapLexer.TARGET_WORD = 45;
SHRMapLexer.WS3 = 46;

SHRMapLexer.MAPPING_TARGET = 1;
SHRMapLexer.CARDINALITY_MAPPING_TARGET = 2;

SHRMapLexer.modeNames = [ "DEFAULT_MODE", "MAPPING_TARGET", "CARDINALITY_MAPPING_TARGET" ];

SHRMapLexer.literalNames = [ 'null', "'Grammar:'", "'Map'", "'Namespace:'", 
                             "'TBD'", "'Target:'", "'maps to'", "'constrain'", 
                             "'to'", "'.'", "'*'", "'['", "']'", "':'", 
                             "'..'", "'boolean'", "'integer'", "'string'", 
                             "'decimal'", "'uri'", "'base64Binary'", "'instant'", 
                             "'date'", "'dateTime'", "'time'", "'code'", 
                             "'oid'", "'id'", "'markdown'", "'unsignedInt'", 
                             "'positiveInt'", "'xhtml'", 'null', 'null', 
                             'null', 'null', 'null', 'null', 'null', 'null', 
                             "'\n'" ];

SHRMapLexer.symbolicNames = [ 'null', "KW_GRAMMAR", "KW_G_MAP", "KW_NAMESPACE", 
                              "KW_TBD", "KW_TARGET", "KW_MAPS_TO", "KW_CONSTRAIN", 
                              "KW_TO", "DOT", "STAR", "OPEN_BRACKET", "CLOSE_BRACKET", 
                              "COLON", "RANGE", "KW_BOOLEAN", "KW_INTEGER", 
                              "KW_STRING", "KW_DECIMAL", "KW_URI", "KW_BASE64_BINARY", 
                              "KW_INSTANT", "KW_DATE", "KW_DATE_TIME", "KW_TIME", 
                              "KW_CODE", "KW_OID", "KW_ID", "KW_MARKDOWN", 
                              "KW_UNSIGNED_INT", "KW_POSITIVE_INT", "KW_XHTML", 
                              "WHOLE_NUMBER", "ALL_CAPS", "UPPER_WORD", 
                              "LOWER_WORD", "DOT_SEPARATED_LW", "DOT_SEPARATED_UW", 
                              "STRING", "WS", "NEWLINE", "COMMENT", "LINE_COMMENT", 
                              "TARGET_PHRASE", "WS2", "TARGET_WORD", "WS3" ];

SHRMapLexer.ruleNames = [ "KW_GRAMMAR", "KW_G_MAP", "KW_NAMESPACE", "KW_TBD", 
                          "KW_TARGET", "KW_MAPS_TO", "KW_CONSTRAIN", "KW_TO", 
                          "DOT", "STAR", "OPEN_BRACKET", "CLOSE_BRACKET", 
                          "COLON", "RANGE", "KW_BOOLEAN", "KW_INTEGER", 
                          "KW_STRING", "KW_DECIMAL", "KW_URI", "KW_BASE64_BINARY", 
                          "KW_INSTANT", "KW_DATE", "KW_DATE_TIME", "KW_TIME", 
                          "KW_CODE", "KW_OID", "KW_ID", "KW_MARKDOWN", "KW_UNSIGNED_INT", 
                          "KW_POSITIVE_INT", "KW_XHTML", "WHOLE_NUMBER", 
                          "ALL_CAPS", "UPPER_WORD", "LOWER_WORD", "DOT_SEPARATED_LW", 
                          "DOT_SEPARATED_UW", "STRING", "WS", "NEWLINE", 
                          "COMMENT", "LINE_COMMENT", "TARGET_PHRASE", "WS2", 
                          "TARGET_WORD", "WS3" ];

SHRMapLexer.grammarFileName = "SHRMapLexer.g4";



exports.SHRMapLexer = SHRMapLexer;

